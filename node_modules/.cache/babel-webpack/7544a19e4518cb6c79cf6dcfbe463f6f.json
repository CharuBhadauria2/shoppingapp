{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../recipes/recipe.service\";\nimport * as i3 from \"../auth/auth.service\";\nexport let DataStorageService = /*#__PURE__*/(() => {\n  class DataStorageService {\n    constructor(http, recipeService, authService) {\n      this.http = http;\n      this.recipeService = recipeService;\n      this.authService = authService;\n    }\n\n    storeRecipes() {\n      const token = this.authService.getToken();\n      return this.http.put('https://shoppingapp-35965-default-rtdb.firebaseio.com/recipes.json?auth=' + token, this.recipeService.getRecipes());\n    }\n\n    getRecipes() {\n      const token = this.authService.getToken();\n      this.http.get('https://shoppingapp-35965-default-rtdb.firebaseio.com/recipes.json?auth=' + token).pipe(map(response => {\n        const recipes = response;\n\n        for (let recipe of recipes) {\n          if (!recipe['ingredients']) {\n            console.log(recipe);\n            recipe['ingredients'] = [];\n          }\n        }\n\n        return recipes;\n      })).subscribe(recipes => {\n        this.recipeService.setRecipes(recipes);\n      });\n    }\n\n  }\n\n  DataStorageService.ɵfac = function DataStorageService_Factory(t) {\n    return new (t || DataStorageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.RecipeService), i0.ɵɵinject(i3.AuthService));\n  };\n\n  DataStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataStorageService,\n    factory: DataStorageService.ɵfac\n  });\n  return DataStorageService;\n})();","map":null,"metadata":{},"sourceType":"module"}