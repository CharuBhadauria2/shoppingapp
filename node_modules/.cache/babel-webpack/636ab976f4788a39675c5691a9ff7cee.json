{"ast":null,"code":"import * as firebase from 'firebase/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(router) {\n      this.router = router;\n    }\n\n    signupUser(email, password) {\n      const auth = firebase.getAuth();\n      firebase.createUserWithEmailAndPassword(auth, email, password).catch(error => console.log(error));\n    }\n\n    signinUser(email, password) {\n      const auth = firebase.getAuth();\n      firebase.signInWithEmailAndPassword(auth, email, password).then(response => {\n        var _a;\n\n        this.router.navigate(['/']);\n        (_a = firebase.getAuth().currentUser) === null || _a === void 0 ? void 0 : _a.getIdToken().then(token => this.token = token);\n      }).catch(error => console.log(error));\n    }\n\n    getToken() {\n      var _a;\n\n      (_a = firebase.getAuth().currentUser) === null || _a === void 0 ? void 0 : _a.getIdToken().then(token => this.token = token);\n      return this.token;\n    }\n\n    isAuthenticated() {\n      return this.token != '';\n    }\n\n    logout() {\n      const auth = firebase.getAuth();\n      firebase.signOut(auth);\n      this.token = '';\n      this.router.navigate(['/signin']);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}